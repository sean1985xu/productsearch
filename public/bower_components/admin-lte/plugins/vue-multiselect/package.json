{
  "_args": [
    [
      {
        "raw": "vue-multiselect",
        "scope": null,
        "escapedName": "vue-multiselect",
        "name": "vue-multiselect",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/home/vagrant/Code/backyard"
    ]
  ],
  "_from": "vue-multiselect@latest",
  "_id": "vue-multiselect@2.0.2",
  "_inCache": true,
  "_location": "/vue-multiselect",
  "_nodeVersion": "7.10.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/vue-multiselect-2.0.2.tgz_1498937789998_0.2320470418781042"
  },
  "_npmUser": {
    "name": "monterail",
    "email": "npm@monterail.com"
  },
  "_npmVersion": "5.0.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "vue-multiselect",
    "scope": null,
    "escapedName": "vue-multiselect",
    "name": "vue-multiselect",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/vue-multiselect/-/vue-multiselect-2.0.2.tgz",
  "_shasum": "9e5a05ace3ccca62fefa2c3b3dd1c484a8a20238",
  "_shrinkwrap": null,
  "_spec": "vue-multiselect",
  "_where": "/home/vagrant/Code/backyard",
  "author": {
    "name": "Damian Dulisz",
    "email": "damian.dulisz@monterail.com"
  },
  "bugs": {
    "url": "https://github.com/monterail/vue-multiselect/issues"
  },
  "dependencies": {},
  "description": "Multiselect component for vue.js",
  "devDependencies": {
    "autoprefixer": "^6.7.2",
    "babel-cli": "^6.23.0",
    "babel-core": "^6.22.1",
    "babel-eslint": "^7.1.1",
    "babel-helper-vue-jsx-merge-props": "^2.0.2",
    "babel-loader": "^6.2.10",
    "babel-plugin-istanbul": "^3.1.2",
    "babel-plugin-syntax-jsx": "^6.13.0",
    "babel-plugin-transform-es2015-destructuring": "^6.23.0",
    "babel-plugin-transform-export-extensions": "^6.8.0",
    "babel-plugin-transform-object-rest-spread": "^6.23.0",
    "babel-plugin-transform-runtime": "^6.0.0",
    "babel-plugin-transform-vue-jsx": "^2.0.2",
    "babel-preset-es2015": "^6.6.0",
    "babel-preset-stage-2": "^6.22.0",
    "babel-register": "^6.0.0",
    "chai": "^3.5.0",
    "chalk": "^1.1.3",
    "connect-history-api-fallback": "^1.1.0",
    "copy-webpack-plugin": "^4.0.0",
    "cross-env": "^3.1.4",
    "css-loader": "^0.25.0",
    "eslint": "^3.14.1",
    "eslint-config-standard": "^6.1.0",
    "eslint-friendly-formatter": "^2.0.5",
    "eslint-loader": "^1.6.1",
    "eslint-plugin-html": "^2.0.0",
    "eslint-plugin-promise": "^3.4.0",
    "eslint-plugin-standard": "^2.0.1",
    "eventsource-polyfill": "^0.9.6",
    "express": "^4.13.3",
    "extract-text-webpack-plugin": "^2.0.0-rc.3",
    "file-loader": "^0.10.0",
    "friendly-errors-webpack-plugin": "^1.1.3",
    "function-bind": "^1.1.0",
    "html-loader": "^0.4.4",
    "html-webpack-plugin": "^2.28.0",
    "http-proxy-middleware": "^0.17.3",
    "inject-loader": "^2.0.1",
    "json-loader": "^0.5.4",
    "jstransformer-markdown-it": "^2.0.0",
    "karma": "^1.4.1",
    "karma-coverage": "^1.1.1",
    "karma-mocha": "^1.3.0",
    "karma-phantomjs-launcher": "^1.0.2",
    "karma-sinon-chai": "^1.2.4",
    "karma-sourcemap-loader": "^0.3.7",
    "karma-spec-reporter": "0.0.26",
    "karma-webpack": "^2.0.2",
    "lolex": "^1.5.2",
    "mocha": "^3.2.0",
    "node-sass": "^3.13.1",
    "opn": "^4.0.2",
    "optimize-css-assets-webpack-plugin": "^1.3.0",
    "ora": "^0.3.0",
    "phantomjs-prebuilt": "^2.1.3",
    "pug": "^2.0.0-beta11",
    "pug-loader": "^2.3.0",
    "raw-loader": "^0.5.1",
    "sass-loader": "^6.0.1",
    "semver": "^5.3.0",
    "shelljs": "^0.7.4",
    "sinon": "^1.17.3",
    "sinon-chai": "^2.8.0",
    "url-loader": "^0.5.7",
    "vue": "^2.3.0",
    "vue-hot-reload-api": "^1.2.0",
    "vue-html-loader": "^1.0.0",
    "vue-loader": "^11.0.0",
    "vue-style-loader": "^2.0.0",
    "vue-template-compiler": "^2.3.4",
    "vue-template-es2015-compiler": "^1.4.2",
    "vuex": "^2.1.1",
    "webpack": "^2.2.1",
    "webpack-bundle-analyzer": "^2.2.1",
    "webpack-dev-middleware": "^1.10.0",
    "webpack-hot-middleware": "^2.16.1",
    "webpack-merge": "^2.6.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-lxXPqZlLpUo0DtfLq1Slh1GdCwVA18k0KJQRB5tYMbB5/qefqxCxXH3sHZmAocapSRyqSVvBU+ieYYIxkRT40w==",
    "shasum": "9e5a05ace3ccca62fefa2c3b3dd1c484a8a20238",
    "tarball": "https://registry.npmjs.org/vue-multiselect/-/vue-multiselect-2.0.2.tgz"
  },
  "engines": {
    "node": ">= 4.0.0",
    "npm": ">= 3.0.0"
  },
  "files": [
    "dist",
    "src",
    "lib"
  ],
  "gitHead": "3a6c6ef5e222ffc59b58a20f950773d087399376",
  "homepage": "https://monterail.github.io/vue-multiselect/",
  "jsnext:main": "dist/vue-multiselect.min.js",
  "jspm": {
    "main": "dist/vue-multiselect.min.js",
    "registry": "npm",
    "format": "esm"
  },
  "license": "MIT",
  "main": "dist/vue-multiselect.min.js",
  "maintainers": [
    {
      "name": "monterail",
      "email": "npm@monterail.com"
    }
  ],
  "name": "vue-multiselect",
  "optionalDependencies": {},
  "private": false,
  "readme": "# vue-multiselect ![Build Status](https://circleci.com/gh/monterail/vue-multiselect/tree/2.0.svg?style=shield&circle-token=5c931ff28fd12587610f835472becdd514d09cef)[![Codecov branch](https://img.shields.io/codecov/c/github/monterail/vue-multiselect/2.0.svg)](https://codecov.io/gh/monterail/vue-multiselect/branch/2.0)\nProbably the most complete *selecting* solution for Vue.js 2.0, without jQuery.\n\n### Features & characteristics:\n* NO dependencies\n* Single select\n* Multiple select\n* Tagging\n* Dropdowns\n* Filtering\n* Search with suggestions\n* Logic split into mixins\n* Basic component and support for custom components\n* V-model support\n* Vuex support\n* Async options support\n* \\> 99% test coverage\n* Fully configurable (see props list below)\n\n## Breaking changes:\n* Instead of Vue.partial for custom option templates you can use a custom render function.\n* The `:key` props has changed to `:track-by`, due to conflicts with Vue 2.0.\n* Support for `v-model`\n* `@update` has changed to `@input` to also work with v-model\n* `:selected` has changed to `:value` for the same reason\n* Browserify users: if you wish to import `.vue` files, please add `vueify` transform.\n\n## Install & basic usage\n\n```bash\nnpm install vue-multiselect\n```\n\n```vue\n<template>\n  <div>\n    <multiselect\n      v-model=\"selected\"\n      :options=\"options\">\n    </multiselect>\n  </div>\n</template>\n\n<script>\n  import Multiselect from 'vue-multiselect'\n  export default {\n    components: { Multiselect },\n    data () {\n      return {\n        selected: null,\n        options: ['list', 'of', 'options']\n      }\n    }\n  }\n</script>\n\n<style src=\"vue-multiselect/dist/vue-multiselect.min.css\"></style>\n```\n\n## JSFiddle\n\n[Example JSFiddle](https://jsfiddle.net/shentao/c4L3gs91/) â€“ Use this for issue reproduction.\n\n## Examples\nin jade-lang/pug-lang\n\n### Single select / dropdown\n``` jade\nmultiselect(\n  :value=\"value\",\n  :options=\"source\",\n  :searchable=\"false\",\n  :close-on-select=\"false\",\n  :allow-empty=\"false\",\n  @input=\"updateSelected\",\n  label=\"name\",\n  placeholder=\"Select one\",\n  track-by=\"name\"\n)\n```\n\n### Single select with search\n``` jade\nmultiselect(\n  v-model=\"value\",\n  :options=\"source\",\n  :close-on-select=\"true\",\n  :clear-on-select=\"false\",\n  placeholder=\"Select one\",\n  label=\"name\",\n  track-by=\"name\"\n)\n```\n\n### Multiple select with search\n``` jade\nmultiselect(\n  v-model=\"multiValue\",\n  :options=\"source\",\n  :multiple=\"true\",\n  :close-on-select=\"true\",\n  placeholder=\"Pick some\",\n  label=\"name\",\n  track-by=\"name\"\n)\n```\n\n### Tagging\nwith `@tag` event\n``` jade\nmultiselect(\n  v-model=\"taggingSelected\",\n  :options=\"taggingOptions\",\n  :multiple=\"true\",\n  :taggable=\"true\",\n  @tag=\"addTag\",\n  tag-placeholder=\"Add this as new tag\",\n  placeholder=\"Type to search or add tag\",\n  label=\"name\",\n  track-by=\"code\"\n)\n```\n\n``` javascript\n\naddTag (newTag) {\n  const tag = {\n    name: newTag,\n    code: newTag.substring(0, 2) + Math.floor((Math.random() * 10000000))\n  }\n  this.taggingOptions.push(tag)\n  this.taggingSelected.push(tag)\n},\n```\n\n### Asynchronous dropdown\n``` jade\nmultiselect(\n  v-model=\"selectedCountries\",\n  :options=\"countries\",\n  :multiple=\"multiple\",\n  :searchable=\"searchable\",\n  @search-change=\"asyncFind\",\n  placeholder=\"Type to search\",\n  label=\"name\"\n  track-by=\"code\"\n)\n  span(slot=\"noResult\").\n    Oops! No elements found. Consider changing the search query.\n```\n\n``` javascript\nmethods: {\n  asyncFind (query) {\n    this.countries = findService(query)\n  }\n}\n```\n\n## Props config\n\n``` javascript\n// multiselectMixin.js\n\nprops: {\n  /**\n   * Array of available options: Objects, Strings or Integers.\n   * If array of objects, visible label will default to option.label.\n   * If `labal` prop is passed, label will equal option['label']\n   * @type {Array}\n   */\n  options: {\n    type: Array,\n    required: true\n  },\n  /**\n   * Equivalent to the `multiple` attribute on a `<select>` input.\n   * @default false\n   * @type {Boolean}\n   */\n  multiple: {\n    type: Boolean,\n    default: false\n  },\n  /**\n   * Presets the selected options value.\n   * @type {Object||Array||String||Integer}\n   */\n  value: {},\n  /**\n   * Key to compare objects\n   * @default 'id'\n   * @type {String}\n   */\n  track-by: {\n    type: String,\n    default: false\n  },\n  /**\n   * Label to look for in option Object\n   * @default 'label'\n   * @type {String}\n   */\n  label: {\n    type: String,\n    default: false\n  },\n  /**\n   * Enable/disable search in options\n   * @default true\n   * @type {Boolean}\n   */\n  searchable: {\n    type: Boolean,\n    default: true\n  },\n  /**\n   * Clear the search input after select()\n   * @default true\n   * @type {Boolean}\n   */\n  clearOnSelect: {\n    type: Boolean,\n    default: true\n  },\n  /**\n   * Hide already selected options\n   * @default false\n   * @type {Boolean}\n   */\n  hideSelected: {\n    type: Boolean,\n    default: false\n  },\n  /**\n   * Equivalent to the `placeholder` attribute on a `<select>` input.\n   * @default 'Select option'\n   * @type {String}\n   */\n  placeholder: {\n    type: String,\n    default: 'Select option'\n  },\n  /**\n   * Sets maxHeight style value of the dropdown\n   * @default 300\n   * @type {Integer}\n   */\n  maxHeight: {\n    type: Number,\n    default: 300\n  },\n  /**\n   * Allow to remove all selected values\n   * @default true\n   * @type {Boolean}\n   */\n  allowEmpty: {\n    type: Boolean,\n    default: true\n  },\n  /**\n   * Reset this.value, this.search, this.selected after this.value changes.\n   * Useful if want to create a stateless dropdown, that fires the this.onChange\n   * callback function with different params.\n   * @default false\n   * @type {Boolean}\n   */\n  resetAfter: {\n    type: Boolean,\n    default: false\n  },\n  /**\n   * Enable/disable closing after selecting an option\n   * @default true\n   * @type {Boolean}\n   */\n  closeOnSelect: {\n    type: Boolean,\n    default: true\n  },\n  /**\n   * Function to interpolate the custom label\n   * @default false\n   * @type {Function}\n   */\n  customLabel: {\n    type: Function,\n    default: false\n  },\n  /**\n   * Disable / Enable tagging\n   * @default false\n   * @type {Boolean}\n   */\n  taggable: {\n    type: Boolean,\n    default: false\n  },\n  /**\n   * String to show when highlighting a potential tag\n   * @default 'Press enter to create a tag'\n   * @type {String}\n  */\n  tagPlaceholder: {\n    type: String,\n    default: 'Press enter to create a tag'\n  },\n  /**\n   * Number of allowed selected options. No limit if false.\n   * @default False\n   * @type {Number}\n  */\n  max: {\n    type: Number,\n    default: false\n  },\n  /**\n   * Will be passed with all events as second param.\n   * Useful for identifying events origin.\n   * @default null\n   * @type {String|Integer}\n  */\n  id: {\n    default: null\n  },\n  /**\n   * Limits the options displayed in the dropdown\n   * to the first X options.\n   * @default 1000\n   * @type {Integer}\n  */\n  optionsLimit: {\n    type: Number,\n    default: 1000\n  }\n}\n\n// pointerMixin.js\n\nprops: {\n  /**\n   * Enable/disable highlighting of the pointed value.\n   * @type {Boolean}\n   * @default true\n   */\n  showPointer: {\n    type: Boolean,\n    default: true\n  }\n},\n\n// Multiselect.vue\n\nprops: {\n  /**\n   * String to show when pointing to an option\n   * @default 'Press enter to select'\n   * @type {String}\n   */\n  selectLabel: {\n    type: String,\n    default: 'Press enter to select'\n  },\n  /**\n   * String to show next to selected option\n   * @default 'Selected'\n   * @type {String}\n  */\n  selectedLabel: {\n    type: String,\n    default: 'Selected'\n  },\n  /**\n   * String to show when pointing to an alredy selected option\n   * @default 'Press enter to remove'\n   * @type {String}\n  */\n  deselectLabel: {\n    type: String,\n    default: 'Press enter to remove'\n  },\n  /**\n   * Decide whether to show pointer labels\n   * @default true\n   * @type {Boolean}\n  */\n  showLabels: {\n    type: Boolean,\n    default: true\n  },\n  /**\n   * Limit the display of selected options. The rest will be hidden within the limitText string.\n   * @default 'label'\n   * @type {String}\n   */\n  limit: {\n    type: Number,\n    default: 99999\n  },\n  /**\n   * Function that process the message shown when selected\n   * elements pass the defined limit.\n   * @default 'and * more'\n   * @param {Int} count Number of elements more than limit\n   * @type {Function}\n   */\n  limitText: {\n    type: Function,\n    default: count => `and ${count} more`\n  },\n  /**\n   * Set true to trigger the loading spinner.\n   * @default False\n   * @type {Boolean}\n  */\n  loading: {\n    type: Boolean,\n    default: false\n  },\n  /**\n   * Disables the multiselect if true.\n   * @default false\n   * @type {Boolean}\n  */\n  disabled: {\n    type: Boolean,\n    default: false\n  }\n}\n```\n\n## Contributing\n\n``` bash\n# serve with hot reload at localhost:8080\nnpm run dev\n\n# distribution build with minification\nnpm run bundle\n\n# build the docs into gh-pages\nnpm run docs\n\n# run unit tests\nnpm run test\n\n# run unit tests watch\nnpm run unit-watch\n\n```\n\nFor detailed explanation on how things work, checkout the [guide](http://vuejs-templates.github.io/webpack/) and [docs for vue-loader](http://vuejs.github.io/vue-loader).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/monterail/vue-multiselect.git"
  },
  "scripts": {
    "bundle": "node build/bundle.js && npm run bundle:lib",
    "bundle:dist": "rm -rf dist && webpack --config build/webpack.bundle.conf.js",
    "bundle:lib": "babel src --out-dir lib",
    "dev": "node build/dev-server.js",
    "docs": "rm -rf gh-pages && mkdir gh-pages && node build/build.js && cp -r v1 gh-pages/v1",
    "finish": "npm run lint && npm test && npm run bundle",
    "lint": "eslint --ext .js,.vue src test/unit/specs",
    "test": "cross-env BABEL_ENV=test karma start test/unit/karma.conf.js --single-run",
    "unit": "cross-env BABEL_ENV=test karma start test/unit/karma.conf.js --watch"
  },
  "unpkg": "dist/vue-multiselect.min.js",
  "version": "2.0.2"
}
